name: Sync Pokemon GO Learnsets

permissions:
  contents: write
  pull-requests: write

on:
  schedule:
    - cron: '0 0 1 * *'  # Monthly at 00:00 UTC on the 1st
  workflow_dispatch:

jobs:
  run-and-pr:
    runs-on: ubuntu-latest
    env:
      PY_SCRIPT: tools/source/dumptools/gamemaster_go_import.py
      FILE_TO_COMMIT: data/learnsets/base/22_go.json
      COMMIT_MESSAGE: "chore: update Pokemon GO learnsets"
      PR_TITLE: "Update Pokemon GO learnsets"
      PR_BODY: "This PR was created automatically by the GitHub Actions workflow."
    steps:
      - name: Checkout repository (default branch, full history)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.repository.default_branch }}
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install requests
          fi

      - name: Run script
        run: |
          if [ ! -f "${PY_SCRIPT}" ]; then
            echo "ERROR: ${PY_SCRIPT} not found"; exit 1
          fi
          python "${PY_SCRIPT}"

      - name: Create a unique branch name
        run: |
          echo "BASE_BRANCH=${{ github.event.repository.default_branch }}" >> "$GITHUB_ENV"
          BRANCH="automation/${GITHUB_WORKFLOW// /-}-${GITHUB_RUN_ID}"
          echo "BRANCH=$BRANCH" >> "$GITHUB_ENV"

      - name: Configure git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

      - name: Create branch
        run: |
          git checkout -b "$BRANCH"

      - name: Stage and commit changes
        run: |
          # If your script may create/update the file, ensure path is repo-relative:
          if [ ! -f "${FILE_TO_COMMIT}" ]; then
            echo '{}' > "${FILE_TO_COMMIT}"
          fi
          git add "${FILE_TO_COMMIT}"
          if ! git diff --cached --quiet; then
            git commit -m "${COMMIT_MESSAGE}"
          else
            echo "No changes to commit."
          fi

      - name: Push branch
        run: |
          if git rev-parse --verify "$BRANCH" >/dev/null 2>&1 && [ "$(git log "$BASE_BRANCH"..HEAD --oneline | wc -l)" -gt 0 ]; then
            git push --set-upstream origin "$BRANCH"
          else
            echo "Nothing to push; skipping PR creation."
            echo "SKIP_PR=true" >> "$GITHUB_ENV"
          fi

      - name: Create pull request
        if: env.SKIP_PR != 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const branch = process.env.BRANCH;
            const base = process.env.BASE_BRANCH;
            const title = process.env.PR_TITLE;
            const body = process.env.PR_BODY;

            const existing = await github.paginate(github.rest.pulls.list, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${branch}`,
              base
            });
            if (existing.length > 0) {
              core.info(`PR already exists: #${existing[0].number}`);
              return;
            }
            const pr = await github.rest.pulls.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title,
              body,
              head: branch,
              base
            });
            core.info(`Created PR #${pr.data.number}: ${pr.data.html_url}`)
